[package]
name        = "chatspeed"
version     = "0.1.0"
description = "Quickly solve problems with the help of AI"
authors     = ["Ezool Network"]
edition     = "2021"
build       = "build.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name       = "chatspeed_lib"
crate-type = ["staticlib", "cdylib", "rlib"]
doctest    = false

[build-dependencies]
tauri-build = { version = "2.0", features = [] }

[dependencies]
anyhow           = "1.0.97"
arboard          = "3.3"
async-trait      = "0.1.88"
base64           = "0.22.1"
bytes            = "1.10.1"
chrono           = { version = "0.4.40", features = ["serde"] }
dashmap          = "6.1.0"
dirs             = "6.0"
fern             = "0.7.1"
futures          = { version = "0.3", features = ["std"] }
futures-util     = "0.3"
global-hotkey    = "0.6.4"
humantime        = "2.2.0"
image            = "0.25.6"
is_executable    = "1.0"
jieba-rs         = "0.7.2"
json_value_merge = "2.0.1"
lazy_static      = "1.4"
locale_config    = "0.3.0"
log              = "0.4.27"
lru              = "0.14.0"
memchr           = "2.7"
parking_lot      = "0.12"
phf              = "0.11.3"
regex            = "1.10.3"

reqwest = { version = "0.12.15", features = ["blocking", "stream", "multipart", "cookies"] }

# NOTE: When using rmcp version 0.1.5, connecting to some npx-hosted MCP services
# (e.g., tavily-mcp) could lead to a ZodError on the server side during request
# deserialization (often related to `params` being `null` or `id` field issues).
# This issue was resolved by updating rmcp to a specific Git commit from its main branch
# (e.g., rev = "d0bbb22850cb7fb4d3fb3299f4e5bb6ed0ae7835" or later),
# which presumably fixed the request serialization incompatibilities.
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk.git", rev = "d0bbb22850cb7fb4d3fb3299f4e5bb6ed0ae7835", features = [
    "client",
    "reqwest",
    "transport-sse-client",
    "transport-child-process",
    "tower",
] }

rusqlite                     = { version = "0.35.0", features = ["bundled", "backup"] }
rust-i18n                    = "3.1.3"
scraper                      = "0.23.1"
seahash                      = "4.1.0"
semver                       = "1.0.26"
serde                        = { version = "1.0.219", features = ["derive"] }
serde_json                   = "1.0.140"
serde_yaml                   = "0.9.34-deprecated"
sha2                         = "0.10"
tauri                        = { version = "2.3.1", features = ["macos-private-api", "tray-icon"] }
tauri-plugin-dialog          = "2.2"
tauri-plugin-fs              = "2.2"
tauri-plugin-global-shortcut = "2.2"
tauri-plugin-opener          = "2.2.6"
tauri-plugin-shell           = "2.2"
tauri-plugin-updater         = "2.5"
thiserror                    = "2.0.12"
time                         = { version = "0.3.38", features = ["formatting"] }
tinysegmenter                = "0.1.0"
tokio                        = { version = "1.44.1", features = ["full"] }
tracing                      = "0.1.41"
tracing-subscriber           = { version = "0.3.19", features = ["env-filter"] }
unicode-script               = "0.5.7"
unicode-segmentation         = "1.9.0"
url                          = "2.5.4"
uuid                         = { version = "1.16.0", features = ["v4"] }
walkdir                      = "2.4.0"
warp                         = "0.3.7"
whatlang                     = "0.16.4"
which                        = "7.0.3"
xxhash-rust                  = { version = "0.8.15", features = ["xxh32"] }
zip                          = "4.0.0"

# uncomment when deno and python runtime is ready
# deno_core                    = { version = "0.331", default-features = false }
# pyo3                         = { version = "0.23.3", features = ["auto-initialize"] }
# v8                           = { version = "130.0.1", default-features = false }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59.0", features = ["Win32_UI_WindowsAndMessaging"] }

[target.'cfg(unix)'.dependencies]
# Linux/macOS 特定依赖
plist = "1.7.1"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-autostart = "2.2.0"

# [target.'cfg(target_os = "macos")'.dependencies]
# snap_rs = { path = "../../snap_rs" }

# [target.'cfg(target_os = "windows")'.dependencies]
# snap_rs = { path = "../../snap_rs" }

# [target.'cfg(target_os = "linux")'.dependencies]
# snap_rs = { path = "../../snap_rs" }

# [features]
# x11     = ["snap_rs/x11"]
# wayland = ["snap_rs/wayland"]

[target.'cfg(windows)'.build-dependencies]
vcpkg  = "0.2"
vswhom = "0.1.0"

[dev-dependencies]
tempfile   = "3.19.1"
small_ctor = "0.1.2"
