[
  {
    "name": "filesystem",
    "description": "Provides comprehensive filesystem operations including reading, writing, moving files, directory management, and advanced file editing with pattern matching and formatting capabilities.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    "config": {
      "mcpServers": {
        "filesystem": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-filesystem",
            "{PATH_TO_MOUNT}"
          ]
        }
      }
    }
  },
  {
    "name": "github",
    "description": "GitHub's official MCP Server that provides seamless integration with GitHub APIs, enabling advanced automation and interaction capabilities for developers and tools.",
    "website": "https://github.com/github/github-mcp-server",
    "config": {
      "mcpServers": {
        "github": {
          "type": "sse",
          "url": "https://api.githubcopilot.com/mcp/"
        }
      }
    }
  },
  {
    "name": "context7",
    "description": "Up-to-date code documentation for LLMs and AI code editors. Provides version-specific documentation and code examples straight from the source, eliminating outdated or hallucinated API information.",
    "website": "https://github.com/upstash/context7",
    "config": {
      "mcpServers": {
        "context7": {
          "command": "npx",
          "args": [
            "-y",
            "@upstash/context7-mcp"
          ]
        }
      }
    }
  },
  {
    "name": "tavily",
    "description": "Enables real-time web search and data extraction capabilities through Tavily's API, providing AI assistants with filtered search results and intelligent content extraction from web pages.",
    "website": "https://github.com/tavily-ai/tavily-mcp",
    "config": {
      "mcpServers": {
        "tavily": {
          "command": "npx",
          "args": [
            "-y",
            "tavily-mcp@latest"
          ],
          "env": [
            [
              "TAVILY_API_KEY",
              "{YOUR_API_KEY_HERE}"
            ]
          ]
        }
      }
    }
  },
  {
    "name": "git",
    "description": "Provides Git repository interaction and automation tools for reading, searching, and manipulating Git repositories through commands like status, diff, commit, branch management, and more.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/git",
    "config": {
      "mcpServers": {
        "git": {
          "command": "uvx",
          "args": [
            "mcp-server-git"
          ]
        }
      }
    }
  },
  {
    "name": "puppeteer",
    "description": "Provides browser automation capabilities using Puppeteer.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer",
    "config": {
      "mcpServers": {
        "puppeteer": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-puppeteer"
          ]
        }
      }
    }
  },
  {
    "name": "figma",
    "description": "MCP server to provide Figma layout information to AI coding agents like Cursor.",
    "website": "https://github.com/GLips/Figma-Context-MCP",
    "config": {
      "mcpServers": {
        "figma": {
          "command": "npx",
          "args": [
            "-y",
            "figma-developer-mcp",
            "--figma-api-key={YOUR_API_KEY_HERE}"
          ]
        }
      }
    }
  },
  {
    "name": "firecrawl",
    "description": "A Model Context Protocol (MCP) server implementation that integrates with Firecrawl for web scraping capabilities.",
    "website": "https://github.com/mendableai/firecrawl-mcp-server",
    "config": {
      "mcpServers": {
        "firecrawl": {
          "command": "npx",
          "args": [
            "-y",
            "firecrawl-mcp"
          ],
          "env": [
            [
              "FIRECRAWL_API_KEY",
              "{YOUR_API_KEY_HERE}"
            ]
          ]
        }
      }
    }
  },
  {
    "name": "brave",
    "description": "Integrates Brave Search API to provide comprehensive web and local search capabilities with smart filtering, pagination, and automatic fallbacks.",
    "website": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/brave-search",
    "config": {
      "mcpServers": {
        "brave": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-brave-search"
          ],
          "env": [
            [
              "BRAVE_API_KEY",
              "{YOUR_API_KEY_HERE}"
            ]
          ]
        }
      }
    }
  },
  {
    "name": "KGMemory",
    "description": "A persistent memory system using a local knowledge graph that enables AI assistants to remember information about users across conversations through entities, relations, and observations.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "config": {
      "mcpServers": {
        "KGMemory": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-memory"
          ]
        }
      }
    }
  },
  {
    "name": "memory",
    "description": "A basic implementation of persistent memory using a local knowledge graph. This lets AI remember information about the user across chats. ",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory",
    "config": {
      "mcpServers": {
        "memory": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-memory"
          ]
        }
      }
    }
  },
  {
    "name": "filesystem",
    "description": "Provides file system operations including reading, writing, editing, and searching files and directories.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem",
    "config": {
      "mcpServers": {
        "filesystem": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-filesystem"
          ]
        }
      }
    }
  },
  {
    "name": "postgresReader",
    "description": "Provides read-only access to PostgreSQL databases, allowing LLMs to inspect database schemas and execute read-only queries within protected transactions.",
    "website": "https://github.com/modelcontextprotocol/servers-archived/tree/main/src/postgres",
    "config": {
      "mcpServers": {
        "postgresReader": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-postgres",
            "postgresql://{USER}:{PASSWORD}@{HOST}:{PORT}/{DB_NAME}"
          ]
        }
      }
    }
  },
  {
    "name": "notion-mcp-server",
    "description": "Official Notion MCP Server that provides seamless integration with Notion APIs, enabling advanced automation and interaction capabilities for managing pages, databases, comments, and content within Notion workspaces.",
    "website": "https://github.com/makenotion/notion-mcp-server",
    "config": {
      "mcpServers": {
        "notion-mcp-server": {
          "command": "npx",
          "args": [
            "-y",
            "@notionhq/notion-mcp-server"
          ],
          "env": [
            [
              "NOTION_TOKEN",
              "{YOUR_NOTION_TOKEN_HERE}"
            ]
          ]
        }
      }
    }
  },
  {
    "name": "pandoc",
    "description": "Seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, and various other document formats.",
    "website": "https://github.com/vivekVells/mcp-pandoc",
    "config": {
      "mcpServers": {
        "pandoc": {
          "command": "uvx",
          "args": [
            "mcp-pandoc"
          ]
        }
      }
    }
  },
  {
    "name": "markitdown",
    "description": "Universal document converter that transforms files and web content into markdown format for AI processing and documentation.",
    "website": "https://github.com/microsoft/markitdown",
    "config": {
      "mcpServers": {
        "markitdown": {
          "command": "uvx",
          "args": [
            "markitdown-mcp"
          ]
        }
      }
    }
  },
  {
    "name": "playwright",
    "description": "Official Microsoft MCP server providing browser automation capabilities using Playwright. Enables LLMs to interact with web pages through structured accessibility snapshots, bypassing the need for screenshots or visually-tuned models. Supports fast and lightweight automation with deterministic tool application.",
    "website": "https://github.com/microsoft/playwright-mcp",
    "config": {
      "mcpServers": {
        "playwright": {
          "command": "npx",
          "args": [
            "@playwright/mcp@latest"
          ]
        }
      }
    }
  },
  {
    "name": "ms365",
    "description": "Comprehensive Microsoft 365 suite integration using Graph API, including Outlook, mail, files, Excel, calendar, and Office applications.",
    "website": "https://github.com/softeria/ms-365-mcp-server",
    "config": {
      "mcpServers": {
        "ms365": {
          "command": "npx",
          "args": [
            "-y",
            "@softeria/ms-365-mcp-server",
            "--org-mode"
          ]
        }
      }
    }
  },
  {
    "name": "Excel",
    "description": "A Model Context Protocol (MCP) server that reads and writes MS Excel data.",
    "website": "https://smithery.ai/server/@negokaz/excel-mcp-server",
    "config": {
      "mcpServers": {
        "Excel": {
          "command": "npx",
          "args": [
            "-y",
            "@negokaz/excel-mcp-server"
          ],
          "env": [
            [
              "EXCEL_MCP_PAGING_CELLS_LIMIT",
              "5000"
            ]
          ]
        }
      }
    }
  },
  {
    "name": "sequential-thinking",
    "description": "A structured problem-solving tool that enables step-by-step analysis, thought revision, and branching logic for complex reasoning tasks.",
    "website": "https://github.com/modelcontextprotocol/servers/tree/main/src/sequentialthinking",
    "config": {
      "mcpServers": {
        "sequential-thinking": {
          "command": "npx",
          "args": [
            "-y",
            "@modelcontextprotocol/server-sequential-thinking"
          ]
        }
      }
    }
  },
  {
    "name": "docker",
    "description": "A powerful Model Context Protocol (MCP) server for Docker operations, enabling seamless container and compose stack management through Claude AI.",
    "website": "https://smithery.ai/server/docker-mcp",
    "config": {
      "mcpServers": {
        "docker": {
          "command": "uvx",
          "args": [
            "docker-mcp"
          ]
        }
      }
    }
  }
]