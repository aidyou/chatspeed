{
  "prompts": {
    "zh-Hans": [
      {
        "name": "翻译",
        "icon": "skill-translate",
        "description": "自动识别文字语言并翻译",
        "prompt": "<cs:translate-task>\n请将`<cs:translate-content></cs:translate-content>`中的文字翻译为 {toLang}，不要输出与翻译文本无关的任何信息\n</cs:translate-task>\n\n<cs:translate-content>\n{content}\n</cs:translate-content>",
        "type": "translation"
      },
      {
        "name": "推理",
        "icon": "skill-plan",
        "description": "像 Deepseek-R1 一样推理",
        "prompt": "「角色」\n请你扮演一个专业的助手，仔细分析用户的问题，将复杂的问题拆解为清晰、详细的步骤或操作流程。在推理的过程中，先输出 <think> 标签内的推理过程，再输出最终的操作结果。每个步骤应描述具体的执行方式、所需的工具或资源，以及注意事项，帮助用户有效解决问题。\n\n「示例」\n用户问题：生鱼片是死鱼片？\n\n你的回答：\n<think>\n嗯，用户问“生鱼片是死鱼片？”这个问题看起来有点矛盾，也有点幽默。首先，我需要确认用户的问题到底是什么。表面上看，用户可能在质疑生鱼片的制作过程，是否使用的是已经死亡的鱼，或者是活的鱼。可能用户对生鱼片的制作方法不太了解，或者有误解。\n\n首先，我应该回顾生鱼片的定义。生鱼片，比如日本的刺身，通常是指用新鲜的鱼类切成薄片，未经烹饪直接食用。所以这里的“生”指的是未经加热处理，而不是指鱼是活的。因此，生鱼片使用的鱼肯定是已经死亡的，因为不可能在鱼活着的时候切片。但关键在于鱼的鲜度，是否在鱼死亡后立即处理，以保持其新鲜度和口感。\n\n接下来，用户可能混淆了“生”和“活”的概念。在中文里，“生”可以指未煮熟，而“活”则是指生物还活着。所以生鱼片中的“生”是指未经过烹饪处理，而不是鱼在切片时仍然存活。因此，生鱼片确实是使用已经死亡的鱼，但关键在于处理的时间和方式，以确保鱼肉的新鲜和安全。\n\n然后，我需要考虑用户可能的背景。用户可能对食品安全有顾虑，担心食用死鱼是否安全。这时候需要解释生鱼片的制作过程，通常选用的是经过严格处理的鱼类，比如快速宰杀、放血、低温保存等，这些步骤都是为了确保鱼肉的新鲜和减少细菌滋生。因此，虽然鱼已经死亡，但通过科学的处理方法，生鱼片仍然是安全可食用的。\n\n另外，用户的问题可能带有一定的调侃或讽刺，质疑生鱼片的新鲜度。这时候需要以专业的态度回应，解释生鱼片的制作标准和行业规范，强调新鲜度和处理技术的重要性，而不是简单地用“死鱼片”来概括。\n\n还有可能用户对生鱼片的来源有疑问，比如是否使用养殖鱼还是野生鱼，不同种类的鱼是否有不同的处理方式。这时候可以补充一些关于常见用于生鱼片的鱼类种类，以及它们的处理方式，比如金枪鱼、三文鱼等，通常是在捕获后立即处理，冷冻保存以杀灭寄生虫，确保食用安全。\n\n同时，我需要避免使用过于专业的术语，保持回答的通俗易懂。例如，解释“熟成”过程，即鱼类在死后经过一定时间的处理，使肉质更加鲜美，但这个过程需要严格控制时间和温度，以防止腐败。\n\n可能还需要提到不同国家和地区的生鱼片制作差异，比如日本的刺身和北欧的腌制生鱼片，处理方式不同，但核心都是确保鱼肉的新鲜和安全。\n\n最后，总结用户的疑问，明确回答：生鱼片确实是使用已经死亡的鱼，但通过严格的处理和保鲜技术，确保其新鲜和安全，因此“生鱼片”中的“生”指的是未经烹饪，而非鱼的状态。同时，提醒消费者选择正规场所食用生鱼片，以确保食品安全。\n</think>\n\n生鱼片确实是使用已死亡的鱼制作而成，但这一表述容易引发误解。以下从多个角度解析这一问题：\n\n**1. 概念定义：**\n- \"生\"在烹饪术语中指未经过高温加热处理，与食材存活状态无关。生鱼片的\"生\"强调其未经蒸煮煎炸等热处理，而非指鱼的生命状态。\n- 所有食用鱼类在加工前均需经过符合卫生标准的宰杀处理，活体切片既不符合人道主义，也存在肌肉痉挛影响口感的问题。\n\n**2. 制作工艺：**\n- **极速处理**：优质生鱼片采用\"活缔\"处理法，捕捞后立即放血、去内脏，在鱼体神经尚未完全死亡时完成处理，最大限度保持细胞活性。\n- **低温保鲜**：全程0-4℃冷链运输，配合冰鲜或超低温冷冻（-60℃以下持续15小时以上）杀灭寄生虫。\n- **熟成技术**：部分高端食材需经过3-7天的控温熟成，通过酶解作用提升风味，这要求鱼体必须处于死亡状态。\n\n**3. 安全标准：**\n- 我国《生食动物性水产品卫生标准》明确规定：原料鱼需符合寄生虫检测指标，养殖类需有完整用药记录，深海鱼种需符合重金属残留标准。\n- 专业刺身店配备紫外线杀菌设备，操作台温度严格控制在10℃以下，从处理到上桌不超过2小时。\n\n**4. 认知误区：**\n- \"活鱼刺身\"实为营销话术，即便现场宰杀，从放血到食用仍需15-30分钟静置，此时鱼已完全死亡。\n- 真正决定生鱼片品质的是ATP（腺苷三磷酸）含量，该指标反映鱼肉细胞活性，与死亡时间无直接线性关系。\n\n**5. 延伸知识：**\n- 传统日本料理中\"神经烧\"技法，利用刚死亡鱼类肌肉的神经反射进行炙烤，证明优质刺身对宰杀技术的极致要求。\n- 挪威三文鱼刺身需经过72小时以上干式熟成，使肉质自然软化，此过程必须在鱼体死亡后完成。\n\n因此，生鱼片本质是运用现代食品科技对优质水产进行精细化加工的美食，其\"生\"字强调的是烹饪方式而非生物状态。选择正规渠道产品并适量食用，既能享受美味又能确保安全。\n\n「下列是用户的问题」\n{content}",
        "type": "mindMapping"
      },
      {
        "name": "思维导图",
        "icon": "skill-mindmap-line",
        "description": "让 AI 帮你制作思维导图",
        "prompt": "<cs:mindmap-task>\nPlease generate a mind map using the following structure. Keep it clear and organized, focusing on main branches and relevant sub-topics:\n\n- Use a main title at the center\n- Create key branches to outline major sections\n- Add 2 or more sub-topics under each branch for depth and clarity\n- Ensure the structure is visually clear and easy to follow\n\nExample:\n\n```markmap\n# Project Overview\n\n- Goals\n  - Increase efficiency\n  - Improve user satisfaction\n- Features\n  - Easy to use\n  - Flexible and customizable\n- Technologies\n  - Frontend\n    - React\n    - Vue\n  - Backend\n    - Node.js\n    - Python\n```\n\nContent to Map in `<cs:content-to-map></cs:content-to-map>`\n\n</cs:mindmap-task>\n\n<cs:content-to-map>\n{content}\n</cs:content-to-map>",
        "type": "mindMapping"
      },
      {
        "name": "流程图",
        "icon": "skill-mindmap-right",
        "description": "让 AI 帮你制作流程图",
        "prompt": "<cs:flowchart-task>\nPlease generate a flowchart using the following structure. Keep it clear and organized, focusing on key steps and decision points:\n\n- Use a main starting point at the top\n- Create sequential steps to outline the process\n- Add decision points with yes/no or other branches as needed\n- Ensure the structure is visually clear and easy to follow\n\nExample:\n\n```mermaid\ngraph TD\n    Start[Start] --> Step1[Identify Goals]\n    Step1 --> Decision1{Is Goal Feasible?}\n    Decision1 -- Yes --> Step2[Develop Plan]\n    Decision1 -- No --> End[End]\n    Step2 --> Step3[Implement Plan]\n    Step3 --> End\n```\n\nContent to Map in `<cs:content-to-map></cs:content-to-map>`\n</cs:flowchart-task>\n\n<cs:content-to-map>\n{content}\n</cs:content-to-map>",
        "type": "mindMapping"
      }
    ],
    "English": [
      {
        "name": "Translate",
        "icon": "skill-translate",
        "description": "Automatically identify the language of the text and translate it",
        "prompt": "<cs:translate-task>\nPlease translate the text in `<cs:translate-content></cs:translate-content>` from {fromLang} to {toLang}\n</cs:translate-task>\n\n<cs:translate-content>\n{content}\n</cs:translate-content>",
        "type": "translation"
      },
      {
        "name": "Reasoning",
        "icon": "skill-plan",
        "description": "Reason like Deepseek-R1",
        "prompt": "## Role\nPlease act as a professional assistant, carefully analyze the user's questions, and break down complex problems into clear, detailed steps or operational procedures. During the reasoning process, first output the reasoning within the <think> tags, followed by the final actionable results. Each step should describe the specific execution method, required tools or resources, and precautions to help the user effectively resolve the problem.\n\n## Example\nQ：A man walks into a bar and asks the bartender for a glass of water. The bartender pulls out a gun and points it at him. The man says, \"Thank you,\" and walks out. Why?\n\nA：\n<think>\nlet's try to figure out this riddle. So, the scenario is a man walks into a bar, asks for a glass of water, the bartender pulls out a gun, points it at him, the man says \"Thank you\" and leaves. Why would that happen?\nFirst, let's break down the elements. The man wants water, but the bartender responds with a gun. The man thanks him and leaves. There's something here that connects the water request to the gun in a non-literal way. Maybe the man's need for water is related to something else that the gun solves.\n\nHmm, maybe the man had hiccups? Because sometimes people hold their breath or get startled to stop hiccups. If the bartender pulled out a gun, that would startle the man, curing his hiccups, so he says thank you and leaves because he doesn't need the water anymore. That makes sense. Let me check if that's the usual answer to this riddle. I think I've heard something similar before where the hiccups are the key. The man needed water to help with hiccups, but the scare from the gun worked instead. So he thanks the bartender because the hiccups are gone. Yeah, that fits. Let me see if there's another angle, but I think that's the classic answer.\n</think>\n\nman had hiccups. When he asked for water, the bartender deduced that he was trying to cure his hiccups (a common remedy). Instead, the bartender surprised him with the gun, startling the man and stopping the hiccups. The man thanked the bartender because the scare worked, and he no longer needed the water.\nAnswer:\nThe man had hiccups. The bartender startled him with the gun to cure them, so he thanked the bartender and left.\n\n## User's Question\n\n{content}",
        "type": "mindMapping"
      },
      {
        "name": "Mindmap",
        "icon": "skill-mindmap-line",
        "description": "Let AI create mind maps for you",
        "prompt": "<cs:mindmap-task>\nPlease generate a mind map using the following structure. Keep it clear and organized, focusing on main branches and relevant sub-topics:\n\n- Use a main title at the center\n- Create key branches to outline major sections\n- Add 2 or more sub-topics under each branch for depth and clarity\n- Ensure the structure is visually clear and easy to follow\n\nExample:\n\n```markmap\n# Project Overview\n\n- Goals\n  - Increase efficiency\n  - Improve user satisfaction\n- Features\n  - Easy to use\n  - Flexible and customizable\n- Technologies\n  - Frontend\n    - React\n    - Vue\n  - Backend\n    - Node.js\n    - Python\n```\n\nContent to Map in `<cs:content-to-map></cs:content-to-map>`\n\n</cs:mindmap-task>\n\n<cs:content-to-map>\n{content}\n</cs:content-to-map>",
        "type": "mindMapping"
      },
      {
        "name": "Flowchart",
        "icon": "skill-mindmap-right",
        "description": "Let AI generate flowcharts for you",
        "prompt": "<cs:flowchart-task>\nPlease generate a flowchart using the following structure. Keep it clear and organized, focusing on key steps and decision points:\n\n- Use a main starting point at the top\n- Create sequential steps to outline the process\n- Add decision points with yes/no or other branches as needed\n- Ensure the structure is visually clear and easy to follow\n\nExample:\n\n```mermaid\ngraph TD\n    Start[Start] --> Step1[Identify Goals]\n    Step1 --> Decision1{Is Goal Feasible?}\n    Decision1 -- Yes --> Step2[Develop Plan]\n    Decision1 -- No --> End[End]\n    Step2 --> Step3[Implement Plan]\n    Step3 --> End\n```\n\nContent to Map in `<cs:content-to-map></cs:content-to-map>`\n</cs:flowchart-task>\n\n<cs:content-to-map>\n{content}\n</cs:content-to-map>",
        "type": "mindMapping"
      }
    ]
  },
  "version": "1.0.1",
  "lastUpdated": "2025-08-13T14:52:04+08:00"
}
